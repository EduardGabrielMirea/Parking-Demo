  public void registrarSalida(String matricula) {
        try (Connection conn = DatabaseConnection.getConnection()) {
            String sqlSelect = "SELECT hora_entrada FROM estancias WHERE matricula = ? AND hora_salida IS NULL";
            LocalDateTime horaEntrada = null;
            try (PreparedStatement stmt = conn.prepareStatement(sqlSelect)) {
                stmt.setString(1, matricula);
                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {
                        horaEntrada = rs.getTimestamp("hora_entrada").toLocalDateTime();
                    }
                }
            }

            if (horaEntrada != null) {
                String sqlUpdate = "UPDATE estancias SET hora_salida = ? WHERE matricula = ? AND hora_salida IS NULL";
                try (PreparedStatement stmt = conn.prepareStatement(sqlUpdate)) {
                    stmt.setTimestamp(1, Timestamp.valueOf(LocalDateTime.now()));
                    stmt.setString(2, matricula);
                    stmt.executeUpdate();
                }

                Estancia estancia = estanciasActivas.remove(matricula);
                if (estancia != null) {
                    estancia.registrarSalida(LocalDateTime.now());
                    long minutos = estancia.calcularMinutos();
                    Vehiculo vehiculo = obtenerVehiculo(conn, matricula);
                    if (vehiculo != null) {
                        double pago = vehiculo.calcularPago(minutos);
                        if (vehiculo instanceof VehiculoResidente) {
                            ((VehiculoResidente) vehiculo).agregarTiempoEstacionado(minutos);
                            actualizarTiempoResidente(conn, matricula, minutos);
                        } else if (vehiculo instanceof VehiculoNoResidente) {
                            // Mostrar pago
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }